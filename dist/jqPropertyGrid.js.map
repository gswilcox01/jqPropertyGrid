{"version":3,"sources":["webpack:///jqPropertyGrid.js","webpack:///webpack/bootstrap 310fdf9ebb3bd41062e0","webpack:///external \"jQuery\"","webpack:///./main.js","webpack:///./types \\.js$","webpack:///./types/autonumeric.js","webpack:///./types/boolean.js","webpack:///./types/color.js","webpack:///./types/input.js","webpack:///./types/label.js","webpack:///./types/mask.js","webpack:///./types/number.js","webpack:///./types/options.js","webpack:///./types/textarea.js"],"names":["jqPropertyGrid","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","jQuery","$","loadStandardTypes","options","types","allTypes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","Symbol","iterator","next","done","typeFilename","value","regex","RegExp","match","exec","typeName","err","return","getGroupHeaderRowHtml","displayName","getPropertyRowHtml","pgId","originalMeta","postCreateInitFuncs","getValueFuncs","meta","extend","type","elemId","fn","spinner","spectrum","validation","validationHTML","rules","each","key","startsWith","htmlAttribute","replace","thisType","customTypes","inputHTML","html","labelHTML","helpIcon","useFontAwesome","description","showHelp","push","postCreateInitFunction","valueFunction","colspan2","_typeof","obj","constructor","pgIdSequence","this","data","groupHTML","prop","browsable","currGroup","group","innerHTML","length","result","webpackContext","req","webpackContextResolve","id","map","Error","./autonumeric.js","./boolean.js","./color.js","./input.js","./label.js","./mask.js","./number.js","./options.js","./textarea.js","resolve","el","document","getElementById","AutoNumeric","getAutoNumericElement","toHexString","opts","color","val","mask","autoclear","onSpinnerChange","$spinner","min","max","change","selectedValue","optionValue","text","Array","join","split"],"mappings":"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","file":"jqPropertyGrid.js","sourcesContent":["var jqPropertyGrid =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jQuery;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__webpack_require__(3);\n\nvar OTHER_GROUP_NAME = 'Other';\nvar GET_VALS_FUNC_KEY = 'pg.getValues';\nvar pgIdSequence = 0;\n\n/**\n * Generates the property grid\n * @param {object} obj - The object whose properties we want to display\n * @param {JQPropertyGridOptions} options - Options object for the component\n */\n\n$.fn.jqPropertyGrid = function (obj, options) {\n\t// Check if the user called the 'get' function (to get the values back from the grid).\n\tif (typeof obj === 'string' && obj === 'get') {\n\t\tif (typeof this.data(GET_VALS_FUNC_KEY) === 'function') {\n\t\t\treturn this.data(GET_VALS_FUNC_KEY)();\n\t\t}\n\t\treturn null;\n\t} else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {\n\t\tconsole.error('jqPropertyGrid 1st parameter must be a JS data object to initialize the grid.');\n\t\treturn;\n\t} else if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object' || options === null) {\n\t\tconsole.error('jqPropertyGrid 2nd parameter must be a JS object defining the grid display options.');\n\t\treturn;\n\t}\n\n\t// Normalize options\n\tloadStandardTypes(options);\n\toptions.customTypes = options.customTypes || {};\n\tvar meta = options.meta;\n\n\t// Seems like we are ok to create the grid\n\tvar groupHTML = {};\n\tvar postCreateInitFuncs = [];\n\tvar getValueFuncs = {};\n\tvar pgId = 'pg' + pgIdSequence++;\n\n\t// LOOP through all properties in the DATA OBJECT\n\tfor (var prop in obj) {\n\t\t// Skip if this is not a direct property, a function, or its meta says it's non browsable\n\t\tif (!obj.hasOwnProperty(prop) || typeof obj[prop] === 'function' || meta[prop] && meta[prop].browsable === false) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If this is the first time we run into this group create the group row\n\t\tvar currGroup = meta[prop] && meta[prop].group || OTHER_GROUP_NAME;\n\t\tif (groupHTML[currGroup] === undefined) {\n\t\t\tgroupHTML[currGroup] = getGroupHeaderRowHtml(currGroup);\n\t\t}\n\n\t\t// Append the current cell html into the group html\n\t\tgroupHTML[currGroup] += getPropertyRowHtml(pgId, prop, obj[prop], meta[prop], postCreateInitFuncs, getValueFuncs, options);\n\t}\n\n\t// Now we have all the html we need, just assemble it\n\tvar innerHTML = '<table class=\"pgTable\">';\n\tfor (var group in groupHTML) {\n\t\tif (group == OTHER_GROUP_NAME) continue;\n\t\tinnerHTML += groupHTML[group];\n\t}\n\n\t// Finally add the \"Other\" group to the end\n\tif (groupHTML[OTHER_GROUP_NAME]) {\n\t\tinnerHTML += groupHTML[OTHER_GROUP_NAME];\n\t}\n\n\t// Close the table and apply it to the div\n\tinnerHTML += '</table>';\n\tthis.html(innerHTML);\n\n\t// Now that HTML is in the DOM, run any post-init functions\n\tfor (var i = 0; i < postCreateInitFuncs.length; ++i) {\n\t\tif (typeof postCreateInitFuncs[i] === 'function') {\n\t\t\tpostCreateInitFuncs[i]();\n\t\t}\n\t}\n\n\t// Create a function that will return the values back from the property grid\n\tthis.data(GET_VALS_FUNC_KEY, function () {\n\t\tvar result = {};\n\t\tfor (var prop in getValueFuncs) {\n\t\t\tif (typeof getValueFuncs[prop] !== 'function') continue;\n\t\t\tresult[prop] = getValueFuncs[prop]();\n\t\t}\n\t\treturn result;\n\t});\n};\n\n/**\n * Uses webpack to load all the standard types from the types folder into the global options.types object\n * @param {object} options - The global options object\n */\nfunction loadStandardTypes(options) {\n\toptions.types = {};\n\tvar allTypes = __webpack_require__(4);\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = allTypes.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar typeFilename = _step.value;\n\n\t\t\tvar regex = new RegExp(\"^\\.\\/(.*?)\\.js$\");\n\t\t\tvar match = regex.exec(typeFilename);\n\t\t\tif (match !== null) {\n\t\t\t\tvar typeName = match[1];\n\t\t\t\toptions.types[typeName] = allTypes(typeFilename);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Gets the html of a group header row\n * @param {string} displayName - The group display name\n */\nfunction getGroupHeaderRowHtml(displayName) {\n\treturn '<tr class=\"pgGroupRow\"><td colspan=\"2\" class=\"pgGroupCell\">' + displayName + '</td></tr>';\n}\n\n/**\n * Gets the html of a specific property row\n * @param {string} pgId - The property-grid id being rendered\n * @param {string} name - The property name\n * @param {*} value - The current property value\n * @param {object} meta - A metadata object describing this property\n * @param {function[]} [postCreateInitFuncs] - An array to fill with functions to run after the grid was created\n * @param {object.<string, function>} [getValueFuncs] - A dictionary where the key is the property name and the value is a function to retrieve the property selected value\n * @param {object} options - The global options object\n */\nfunction getPropertyRowHtml(pgId, name, value, originalMeta, postCreateInitFuncs, getValueFuncs, options) {\n\tvar meta = $.extend(true, {}, originalMeta);\n\tvar type = meta.type || '';\n\tvar elemId = pgId + name;\n\n\t// if type not passed, infer type based on value...\n\tif (type === '') {\n\t\tif (typeof value === 'boolean') {\n\t\t\ttype = 'boolean';\n\t\t} else if (typeof value === 'number') {\n\t\t\ttype = 'number';\n\t\t}\n\t}\n\n\t// if jquery UI components aren't loaded fall back to plain inputs\n\tif (type === 'number' && typeof $.fn.spinner !== 'function') {\n\t\ttype = 'input';\n\t} else if (type === 'color' && typeof $.fn.spectrum !== 'function') {\n\t\ttype = 'input';\n\t}\n\n\t// Create \"jquery form validator\" html to be used later when generating INPUT HTML\n\tif (meta.validation) {\n\t\tmeta.validationHTML = 'data-validation=\"' + meta.validation.rules + '\"';\n\t\t$.each(meta.validation, function (key, value) {\n\t\t\tif (key === 'rules') {\n\t\t\t\treturn true;\n\t\t\t} else if (key.startsWith('sanitize')) {\n\t\t\t\tvar htmlAttribute = key.replace(/_/g, \"-\");\n\t\t\t\tmeta.validationHTML += ' data-' + htmlAttribute + '=\"' + value + '\"';\n\t\t\t} else {\n\t\t\t\tvar htmlAttribute = key.replace(/_/g, \"-\");\n\t\t\t\tmeta.validationHTML += ' data-validation-' + htmlAttribute + '=\"' + value + '\"';\n\t\t\t}\n\t\t});\n\t} else {\n\t\tmeta.validationHTML = '';\n\t}\n\n\t// Lookup the type or default to 'input'\n\t// Create the input HTML\n\tvar thisType = options.customTypes[type] || options.types[type] || options.types['input'];\n\tvar inputHTML = thisType.html(elemId, name, value, meta);\n\n\t// Create the label HTML\n\tvar labelHTML = meta.name || name;\n\tvar helpIcon = options.useFontAwesome ? '<i class=\"fa fa-question-circle-o\"></i>' : '[?]';\n\tif (typeof meta.description === 'string' && meta.description && (typeof meta.showHelp === 'undefined' || meta.showHelp === true)) {\n\t\tlabelHTML += '<span class=\"pgTooltip\" title=\"' + meta.description + '\">' + helpIcon + '</span>';\n\t}\n\n\t// Create post-DOM init functions & getValue functions\n\tif (thisType.hasOwnProperty('postCreateInitFunction')) {\n\t\tpostCreateInitFuncs.push(thisType.postCreateInitFunction(elemId, name, value, meta));\n\t}\n\tif (thisType.hasOwnProperty('valueFunction')) {\n\t\tgetValueFuncs[name] = thisType.valueFunction(elemId, name, value, meta);\n\t}\n\n\t// Finally assemble the HTML into 1 or 2 columns in a TR\n\tif (meta.colspan2 === true) {\n\t\treturn '<tr class=\"pgRow\"><td colspan=\"2\" class=\"pgCell\">' + inputHTML + '</td></tr>';\n\t} else {\n\t\treturn '<tr class=\"pgRow\"><td class=\"pgCell\">' + labelHTML + '</td><td class=\"pgCell\">' + inputHTML + '</td></tr>';\n\t}\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./autonumeric.js\": 5,\n\t\"./boolean.js\": 6,\n\t\"./color.js\": 7,\n\t\"./input.js\": 8,\n\t\"./label.js\": 9,\n\t\"./mask.js\": 10,\n\t\"./number.js\": 11,\n\t\"./options.js\": 12,\n\t\"./textarea.js\": 13\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// requires - https://github.com/autoNumeric/autoNumeric\n\nmodule.exports = {\n  html: function html(elemId, name, value, meta) {\n    return '<input type=\"text\" class=\"form-control\" id=\"' + elemId + '\" value=\"' + value + '\" ' + meta.validationHTML + ' />';\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      var el = document.getElementById(elemId);\n      var autoEl = AutoNumeric.getAutoNumericElement(el);\n      // see different options @ https://github.com/autoNumeric/autoNumeric#methods\n      // return autoEl.get();\n      // return autoEl.getFormatted();\n      // return autoEl.getNumber();\n      return autoEl.get();\n    };\n  },\n  postCreateInitFunction: function postCreateInitFunction(elemId, name, value, meta) {\n    return function () {\n      var options = meta.options || {};\n      new AutoNumeric('#' + elemId, options);\n    };\n  }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    var html = '<input type=\"checkbox\" id=\"' + elemId + '\" value=\"' + name + '\"';\n    html += value ? ' checked' : '';\n    html += ' />';\n    return html;\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).prop('checked');\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" />';\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).spectrum('get').toHexString();\n    };\n  },\n  postCreateInitFunction: function postCreateInitFunction(elemId, name, value, meta) {\n    return function () {\n      var opts = $.extend({}, meta.options);\n      if (typeof value === 'string') {\n        opts.color = value;\n      }\n      $('#' + elemId).spectrum(opts);\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    return '<input type=\"text\" class=\"form-control\" id=\"' + elemId + '\" value=\"' + value + '\" ' + meta.validationHTML + ' />';\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  html: function html(elemId, name, value, meta) {\n    if (typeof meta.description === 'string' && meta.description) {\n      return '<label for=\"' + elemId + '\" title=\"' + meta.description + '\">' + value + '</label>';\n    } else {\n      return '<label for=\"' + elemId + '\">' + value + '</label>';\n    }\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return value;\n    };\n  }\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {// requires - https://github.com/digitalBush/jquery.maskedinput\nmodule.exports = {\n  html: function html(elemId, name, value, meta) {\n    return '<input type=\"text\" class=\"form-control\" id=\"' + elemId + '\" value=\"' + value + '\" ' + meta.validationHTML + ' />';\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    };\n  },\n  postCreateInitFunction: function postCreateInitFunction(elemId, name, value, meta) {\n    if (typeof $.fn.mask === 'function') {\n      var opts = $.extend({}, meta.options);\n\n      // if not defined, default to autoclear\n      if (typeof opts.autoclear === 'undefined') {\n        opts.autoclear = false;\n      }\n      return function () {\n        $('#' + elemId).mask(opts.mask, opts);\n      };\n    } else {\n      console.error('$.fn.mask is NOT a function!');\n      return null;\n    }\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" value=\"' + value + '\" style=\"width:50px\" />';\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      if (typeof $.fn.spinner === 'function') {\n        return $('#' + elemId).spinner('value');\n      } else {\n        return $('#' + elemId).val();\n      }\n    };\n  },\n  postCreateInitFunction: function postCreateInitFunction(elemId, name, value, meta) {\n    if (typeof $.fn.spinner === 'function') {\n      var opts = $.extend({}, meta.options);\n      // Add a handler to the change event to verify the min/max (only if not provided by the user)\n      opts.change = typeof opts.change === 'undefined' ? onSpinnerChange : opts.change;\n\n      return function () {\n        $('#' + elemId).spinner(opts);\n      };\n    } else {\n      return null;\n    }\n  }\n};\n\n/**\n * Handler for the spinner change event\n */\nfunction onSpinnerChange() {\n  var $spinner = $(this);\n  var value = $spinner.spinner('value');\n\n  // If the value is null and the real value in the textbox is string we empty the textbox\n  if (value === null && typeof $spinner.val() === 'string') {\n    $spinner.val('');\n    return;\n  }\n\n  // Now check that the number is in the min/max range.\n  var min = $spinner.spinner('option', 'min');\n  var max = $spinner.spinner('option', 'max');\n  if (typeof min === 'number' && this.value < min) {\n    this.value = min;\n    return;\n  }\n\n  if (typeof max === 'number' && this.value > max) {\n    this.value = max;\n  }\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = {\n  html: function html(elemId, name, value, meta) {\n    selectedValue = value || '';\n    options = meta.options || [];\n\n    var html = '<select id=\"' + elemId + '\">';\n    for (var i = 0; i < options.length; i++) {\n      var optionValue = _typeof(options[i]) === 'object' ? options[i].value : options[i];\n      var text = _typeof(options[i]) === 'object' ? options[i].text : options[i];\n\n      html += '<option value=\"' + optionValue + '\"';\n      html += selectedValue === optionValue ? ' selected>' : '>';\n      html += text + '</option>';\n    }\n    html += '</select>';\n    return html;\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    var html = '<textarea id=\"' + elemId;\n    if (value instanceof Array) {\n      html += '\" rows=6 style=\"white-space: nowrap; overflow-x: auto; width:100%\">';\n      html += value.join(\"\\n\");\n    } else {\n      html += '\" rows=6 style=\"overflow-x: auto; width:100%\">';\n      html += value;\n    }\n    html += '</textarea>';\n    return html;\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      if (value instanceof Array) {\n        return $('#' + elemId).val().split('\\n');\n      } else {\n        return $('#' + elemId).val();\n      }\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// jqPropertyGrid.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 310fdf9ebb3bd41062e0","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 0\n// module chunks = 0","require('./main.css')\n\nvar OTHER_GROUP_NAME = 'Other';\nvar GET_VALS_FUNC_KEY = 'pg.getValues';\nvar pgIdSequence = 0;\n\n/**\n * Generates the property grid\n * @param {object} obj - The object whose properties we want to display\n * @param {JQPropertyGridOptions} options - Options object for the component\n */\n\n$.fn.jqPropertyGrid = function(obj, options) {\n\t// Check if the user called the 'get' function (to get the values back from the grid).\n\tif (typeof obj === 'string' && obj === 'get') {\n\t\tif (typeof this.data(GET_VALS_FUNC_KEY) === 'function') {\n\t\t\treturn this.data(GET_VALS_FUNC_KEY)();\n\t\t}\n\t\treturn null;\n\t} else if (typeof obj !== 'object' || obj === null) {\n\t\tconsole.error('jqPropertyGrid 1st parameter must be a JS data object to initialize the grid.');\n\t\treturn;\n\t} else if (typeof options !== 'object' || options === null) {\n\t\tconsole.error('jqPropertyGrid 2nd parameter must be a JS object defining the grid display options.');\n\t\treturn;\n\t}\n\n\t// Normalize options\n\tloadStandardTypes(options);\n\toptions.customTypes = options.customTypes || {};\n\tvar meta = options.meta;\n\n\t// Seems like we are ok to create the grid\n\tvar groupHTML = {};\n\tvar postCreateInitFuncs = [];\n\tvar getValueFuncs = {};\n\tvar pgId = 'pg' + (pgIdSequence++);\n\n\t// LOOP through all properties in the DATA OBJECT\n\tfor (var prop in obj) {\n\t\t// Skip if this is not a direct property, a function, or its meta says it's non browsable\n\t\tif (!obj.hasOwnProperty(prop) || typeof obj[prop] === 'function' || (meta[prop] && meta[prop].browsable === false)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If this is the first time we run into this group create the group row\n\t\tvar currGroup = (meta[prop] && meta[prop].group) || OTHER_GROUP_NAME;\n\t\tif (groupHTML[currGroup] === undefined) {\n\t\t\tgroupHTML[currGroup] = getGroupHeaderRowHtml(currGroup);\n\t\t}\n\n\t\t// Append the current cell html into the group html\n\t\tgroupHTML[currGroup] += getPropertyRowHtml(pgId, prop, obj[prop], meta[prop], postCreateInitFuncs, getValueFuncs, options);\n\t}\n\n\t// Now we have all the html we need, just assemble it\n\tvar innerHTML = '<table class=\"pgTable\">';\n\tfor (var group in groupHTML) {\n\t\tif (group == OTHER_GROUP_NAME) continue;\n\t\tinnerHTML += groupHTML[group];\n\t}\n\n\t// Finally add the \"Other\" group to the end\n\tif (groupHTML[OTHER_GROUP_NAME]) {\n\t\tinnerHTML += groupHTML[OTHER_GROUP_NAME];\n\t}\n\n\t// Close the table and apply it to the div\n\tinnerHTML += '</table>';\n\tthis.html(innerHTML);\n\n\t// Now that HTML is in the DOM, run any post-init functions\n\tfor (var i = 0; i < postCreateInitFuncs.length; ++i) {\n\t\tif (typeof postCreateInitFuncs[i] === 'function') {\n\t\t\tpostCreateInitFuncs[i]();\n\t\t}\n\t}\n\n\t// Create a function that will return the values back from the property grid\n\tthis.data(GET_VALS_FUNC_KEY, function() {\n\t\tvar result = {};\n\t\tfor (var prop in getValueFuncs) {\n\t\t\tif (typeof getValueFuncs[prop] !== 'function') continue;\n\t\t\tresult[prop] = getValueFuncs[prop]();\n\t\t}\n\t\treturn result;\n\t});\n};\n\n/**\n * Uses webpack to load all the standard types from the types folder into the global options.types object\n * @param {object} options - The global options object\n */\nfunction loadStandardTypes(options) {\n\toptions.types = {};\n\tvar allTypes = require.context(\"./types\", true, /\\.js$/)\n\tfor (var typeFilename of allTypes.keys()) {\n\t\tvar regex = new RegExp(\"^\\.\\/(.*?)\\.js$\");\n\t\tvar match = regex.exec(typeFilename);\n\t\tif (match !== null) {\n\t\t\tvar typeName = match[1];\n\t\t\toptions.types[typeName] = allTypes(typeFilename)\n\t\t}\n\t}\n}\n\n/**\n * Gets the html of a group header row\n * @param {string} displayName - The group display name\n */\nfunction getGroupHeaderRowHtml(displayName) {\n\treturn '<tr class=\"pgGroupRow\"><td colspan=\"2\" class=\"pgGroupCell\">' + displayName + '</td></tr>';\n}\n\n/**\n * Gets the html of a specific property row\n * @param {string} pgId - The property-grid id being rendered\n * @param {string} name - The property name\n * @param {*} value - The current property value\n * @param {object} meta - A metadata object describing this property\n * @param {function[]} [postCreateInitFuncs] - An array to fill with functions to run after the grid was created\n * @param {object.<string, function>} [getValueFuncs] - A dictionary where the key is the property name and the value is a function to retrieve the property selected value\n * @param {object} options - The global options object\n */\nfunction getPropertyRowHtml(pgId, name, value, originalMeta, postCreateInitFuncs, getValueFuncs, options) {\n\tvar meta = $.extend(true, {}, originalMeta);\n\tvar type = meta.type || '';\n\tvar elemId = pgId + name;\n\n\t// if type not passed, infer type based on value...\n\tif (type === '') {\n\t\tif (typeof value === 'boolean') {\n\t\t\ttype = 'boolean';\n\t\t} else if (typeof value === 'number') {\n\t\t\ttype = 'number';\n\t\t}\n\t}\n\n\t// if jquery UI components aren't loaded fall back to plain inputs\n\tif (type === 'number' && typeof $.fn.spinner !== 'function') {\n\t\ttype = 'input';\n\t} else if (type === 'color' && typeof $.fn.spectrum !== 'function') {\n\t\ttype = 'input';\n\t}\n\n\t// Create \"jquery form validator\" html to be used later when generating INPUT HTML\n\tif (meta.validation) {\n\t\tmeta.validationHTML = 'data-validation=\"' + meta.validation.rules + '\"';\n\t\t$.each(meta.validation, function(key, value) {\n\t\t\tif (key === 'rules') {\n\t\t\t\treturn true;\n\t\t\t} else if (key.startsWith('sanitize')) {\n\t\t\t\tvar htmlAttribute = key.replace(/_/g, \"-\");\n\t\t\t\tmeta.validationHTML += ' data-' + htmlAttribute + '=\"' + value + '\"';\n\t\t\t} else {\n\t\t\t\tvar htmlAttribute = key.replace(/_/g, \"-\");\n\t\t\t\tmeta.validationHTML += ' data-validation-' + htmlAttribute + '=\"' + value + '\"';\n\t\t\t}\n\t\t});\n\t} else {\n\t\tmeta.validationHTML = '';\n\t}\n\n\t// Lookup the type or default to 'input'\n\t// Create the input HTML\n\tvar thisType = options.customTypes[type] || options.types[type] || options.types['input'];\n\tvar inputHTML = thisType.html(elemId, name, value, meta);\n\n\t// Create the label HTML\n\tvar labelHTML = meta.name || name;\n\tvar helpIcon = (options.useFontAwesome) ? '<i class=\"fa fa-question-circle-o\"></i>' : '[?]';\n\tif (typeof meta.description === 'string' && meta.description &&\n\t\t(typeof meta.showHelp === 'undefined' || meta.showHelp === true)) {\n\t\t\tlabelHTML +='<span class=\"pgTooltip\" title=\"' + meta.description + '\">' + helpIcon + '</span>';\n\t}\n\n\t// Create post-DOM init functions & getValue functions\n\tif (thisType.hasOwnProperty('postCreateInitFunction')) {\n\t\tpostCreateInitFuncs.push(thisType.postCreateInitFunction(elemId, name, value, meta));\n\t}\n\tif (thisType.hasOwnProperty('valueFunction')) {\n\t\tgetValueFuncs[name] = thisType.valueFunction(elemId, name, value, meta);\n\t}\n\n\t// Finally assemble the HTML into 1 or 2 columns in a TR\n\tif (meta.colspan2 === true) {\n\t\treturn '<tr class=\"pgRow\"><td colspan=\"2\" class=\"pgCell\">' + inputHTML + '</td></tr>';\n\t} else {\n\t\treturn '<tr class=\"pgRow\"><td class=\"pgCell\">' + labelHTML + '</td><td class=\"pgCell\">' + inputHTML + '</td></tr>';\n\t}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./main.js","var map = {\n\t\"./autonumeric.js\": 5,\n\t\"./boolean.js\": 6,\n\t\"./color.js\": 7,\n\t\"./input.js\": 8,\n\t\"./label.js\": 9,\n\t\"./mask.js\": 10,\n\t\"./number.js\": 11,\n\t\"./options.js\": 12,\n\t\"./textarea.js\": 13\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types \\.js$\n// module id = 4\n// module chunks = 0","// requires - https://github.com/autoNumeric/autoNumeric\n\nmodule.exports = {\n  html (elemId, name, value, meta) {\n    return '<input type=\"text\" class=\"form-control\" id=\"' + elemId + '\" value=\"' + value + '\" ' + meta.validationHTML + ' />';\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      var el = document.getElementById(elemId);\n      var autoEl = AutoNumeric.getAutoNumericElement(el);\n      // see different options @ https://github.com/autoNumeric/autoNumeric#methods\n      // return autoEl.get();\n      // return autoEl.getFormatted();\n      // return autoEl.getNumber();\n      return autoEl.get();\n    }\n  },\n\n  postCreateInitFunction (elemId, name, value, meta) {\n    return function () {\n      var options = meta.options || {};\n      new AutoNumeric('#' + elemId, options);\n    };\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./types/autonumeric.js","module.exports = {\n  html (elemId, name, value, meta) {\n    var html = '<input type=\"checkbox\" id=\"' + elemId + '\" value=\"' + name + '\"';\n    html += (value) ? ' checked' : '';\n    html += ' />';\n    return html;\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).prop('checked');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./types/boolean.js","module.exports = {\n  html (elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" />';\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).spectrum('get').toHexString();\n    }\n  },\n\n  postCreateInitFunction (elemId, name, value, meta) {\n    return function () {\n      var opts = $.extend({}, meta.options);\n      if (typeof value === 'string') {\n        opts.color = value;\n      }\n      $('#' + elemId).spectrum(opts);\n    };\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./types/color.js","module.exports = {\n  html (elemId, name, value, meta) {\n    return '<input type=\"text\" class=\"form-control\" id=\"' + elemId + '\" value=\"' + value + '\" ' + meta.validationHTML + ' />';\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./types/input.js","module.exports = {\n  html (elemId, name, value, meta) {\n    if (typeof meta.description === 'string' && meta.description) {\n\t\t\treturn '<label for=\"' + elemId + '\" title=\"' + meta.description + '\">' + value + '</label>';\n\t\t} else {\n\t\t\treturn '<label for=\"' + elemId + '\">' + value + '</label>';\n\t\t}\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return value;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./types/label.js","// requires - https://github.com/digitalBush/jquery.maskedinput\nmodule.exports = {\n  html (elemId, name, value, meta) {\n    return '<input type=\"text\" class=\"form-control\" id=\"' + elemId + '\" value=\"' + value + '\" ' + meta.validationHTML + ' />';\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    }\n  },\n\n  postCreateInitFunction (elemId, name, value, meta) {\n    if (typeof $.fn.mask === 'function') {\n      var opts = $.extend({}, meta.options);\n\n      // if not defined, default to autoclear\n      if (typeof opts.autoclear === 'undefined') {\n        opts.autoclear = false;\n      }\n      return function () {\n        $('#' + elemId).mask(opts.mask, opts);\n      };\n    } else {\n      console.error('$.fn.mask is NOT a function!')\n      return null;\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./types/mask.js","module.exports = {\n  html (elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" value=\"' + value + '\" style=\"width:50px\" />';\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      if (typeof $.fn.spinner === 'function') {\n        return $('#' + elemId).spinner('value');\n      } else {\n        return $('#' + elemId).val();\n      }\n    }\n  },\n\n  postCreateInitFunction (elemId, name, value, meta) {\n    if (typeof $.fn.spinner === 'function') {\n      var opts = $.extend({}, meta.options);\n      // Add a handler to the change event to verify the min/max (only if not provided by the user)\n      opts.change = typeof opts.change === 'undefined' ? onSpinnerChange : opts.change;\n      \n      return function () {\n        $('#' + elemId).spinner(opts);\n      };\n    } else {\n      return null;\n    }\n  }\n};\n\n/**\n * Handler for the spinner change event\n */\nfunction onSpinnerChange() {\n\tvar $spinner = $(this);\n\tvar value = $spinner.spinner('value');\n\n\t// If the value is null and the real value in the textbox is string we empty the textbox\n\tif (value === null && typeof $spinner.val() === 'string') {\n\t\t$spinner.val('');\n\t\treturn;\n\t}\n\n\t// Now check that the number is in the min/max range.\n\tvar min = $spinner.spinner('option', 'min');\n\tvar max = $spinner.spinner('option', 'max');\n\tif (typeof min === 'number' && this.value < min) {\n\t\tthis.value = min;\n\t\treturn;\n\t}\n\n\tif (typeof max === 'number' && this.value > max) {\n\t\tthis.value = max;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./types/number.js","module.exports = {\n  html (elemId, name, value, meta) {\n    selectedValue = value || '';\n    options = meta.options || [];\n  \n    var html = '<select id=\"' + elemId + '\">';\n    for (var i = 0; i < options.length; i++) {\n      var optionValue = typeof options[i] === 'object' ? options[i].value : options[i];\n      var text = typeof options[i] === 'object' ? options[i].text : options[i];\n  \n      html += '<option value=\"' + optionValue + '\"';\n      html += (selectedValue === optionValue) ? ' selected>' : '>';\n      html += text + '</option>';\n    }\n    html += '</select>';\n    return html;\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./types/options.js","module.exports = {\n  html (elemId, name, value, meta) {\n    var html = '<textarea id=\"' + elemId;\n    if (value instanceof Array) {\n      html += '\" rows=6 style=\"white-space: nowrap; overflow-x: auto; width:100%\">';\n      html += value.join(\"\\n\");\n    } else {\n      html += '\" rows=6 style=\"overflow-x: auto; width:100%\">';\n      html += value;\n    }\n    html += '</textarea>';\n    return html;\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      if (value instanceof Array) {\n        return $('#' + elemId).val().split('\\n');\n      } else {\n        return $('#' + elemId).val()\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./types/textarea.js"],"sourceRoot":""}