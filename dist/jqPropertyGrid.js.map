{"version":3,"sources":["webpack:///jqPropertyGrid.js","webpack:///webpack/bootstrap f268d2101a9fd0483c61","webpack:///external \"jQuery\"","webpack:///./main.js","webpack:///./types \\.js$","webpack:///./types/boolean.js","webpack:///./types/color.js","webpack:///./types/input.js","webpack:///./types/label.js","webpack:///./types/number.js","webpack:///./types/options.js","webpack:///./types/textarea.js"],"names":["jqPropertyGrid","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","jQuery","$","getGroupHeaderRowHtml","displayName","getPropertyRowHtml","pgId","value","meta","postCreateInitFuncs","getValueFuncs","options","valueHTML","type","elemId","fn","spinner","spectrum","thisType","customTypes","types","html","valueFunction","push","postCreateInitFunction","helpIcon","useFontAwesome","description","showHelp","colspan2","_typeof","Symbol","iterator","obj","constructor","pgIdSequence","this","data","allTypes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","next","done","typeFilename","regex","RegExp","match","exec","typeName","err","return","groupHTML","prop","browsable","currGroup","group","innerHTML","length","result","webpackContext","req","webpackContextResolve","id","map","Error","./boolean.js","./color.js","./input.js","./label.js","./number.js","./options.js","./textarea.js","resolve","toHexString","opts","extend","color","val","onSpinnerChange","$spinner","min","max","change","selectedValue","optionValue","text","Array","join","split"],"mappings":"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","file":"jqPropertyGrid.js","sourcesContent":["var jqPropertyGrid =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jQuery;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__webpack_require__(3);\n\nvar OTHER_GROUP_NAME = 'Other';\nvar GET_VALS_FUNC_KEY = 'pg.getValues';\nvar pgIdSequence = 0;\n\n/**\n * Generates the property grid\n * @param {object} obj - The object whose properties we want to display\n * @param {JQPropertyGridOptions} options - Options object for the component\n */\n\n$.fn.jqPropertyGrid = function (obj, options) {\n\t// Check if the user called the 'get' function (to get the values back from the grid).\n\tif (typeof obj === 'string' && obj === 'get') {\n\t\tif (typeof this.data(GET_VALS_FUNC_KEY) === 'function') {\n\t\t\treturn this.data(GET_VALS_FUNC_KEY)();\n\t\t}\n\n\t\treturn null;\n\t} else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {\n\t\tconsole.error('jqPropertyGrid 1st parameter must be a JS data object to initialize the grid.');\n\t\treturn;\n\t} else if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object' || options === null) {\n\t\tconsole.error('jqPropertyGrid 2nd parameter must be a JS object defining the grid display options.');\n\t\treturn;\n\t}\n\n\t// Normalize options\n\toptions.customTypes = options.customTypes || {};\n\toptions.types = {};\n\tvar meta = options.meta;\n\n\t// LOAD ALL files in the \"types\" folder as a custom type named the same as the base filename\n\tvar allTypes = __webpack_require__(4);\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = allTypes.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar typeFilename = _step.value;\n\n\t\t\tvar regex = new RegExp(\"^\\.\\/(.*?)\\.js$\");\n\t\t\tvar match = regex.exec(typeFilename);\n\t\t\tif (match !== null) {\n\t\t\t\tvar typeName = match[1];\n\t\t\t\toptions.types[typeName] = allTypes(typeFilename);\n\t\t\t}\n\t\t}\n\n\t\t// Seems like we are ok to create the grid\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar groupHTML = {};\n\tvar postCreateInitFuncs = [];\n\tvar getValueFuncs = {};\n\tvar pgId = 'pg' + pgIdSequence++;\n\n\t// LOOP through all properties in the DATA OBJECT\n\tfor (var prop in obj) {\n\t\t// Skip if this is not a direct property, a function, or its meta says it's non browsable\n\t\tif (!obj.hasOwnProperty(prop) || typeof obj[prop] === 'function' || meta[prop] && meta[prop].browsable === false) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If this is the first time we run into this group create the group row\n\t\tvar currGroup = meta[prop] && meta[prop].group || OTHER_GROUP_NAME;\n\t\tif (groupHTML[currGroup] === undefined) {\n\t\t\tgroupHTML[currGroup] = getGroupHeaderRowHtml(currGroup);\n\t\t}\n\n\t\t// Append the current cell html into the group html\n\t\tgroupHTML[currGroup] += getPropertyRowHtml(pgId, prop, obj[prop], meta[prop], postCreateInitFuncs, getValueFuncs, options);\n\t}\n\n\t// Now we have all the html we need, just assemble it\n\tvar innerHTML = '<table class=\"pgTable\">';\n\tfor (var group in groupHTML) {\n\t\tif (group == OTHER_GROUP_NAME) continue;\n\t\tinnerHTML += groupHTML[group];\n\t}\n\n\t// Finally add the \"Other\" group to the end\n\tif (groupHTML[OTHER_GROUP_NAME]) {\n\t\tinnerHTML += groupHTML[OTHER_GROUP_NAME];\n\t}\n\n\t// Close the table and apply it to the div\n\tinnerHTML += '</table>';\n\tthis.html(innerHTML);\n\n\t// Now that HTML is in the DOM, run any post-init functions\n\tfor (var i = 0; i < postCreateInitFuncs.length; ++i) {\n\t\tif (typeof postCreateInitFuncs[i] === 'function') {\n\t\t\tpostCreateInitFuncs[i]();\n\t\t}\n\t}\n\n\t// Create a function that will return the values back from the property grid\n\tthis.data(GET_VALS_FUNC_KEY, function () {\n\t\tvar result = {};\n\t\tfor (var prop in getValueFuncs) {\n\t\t\tif (typeof getValueFuncs[prop] !== 'function') continue;\n\t\t\tresult[prop] = getValueFuncs[prop]();\n\t\t}\n\t\treturn result;\n\t});\n};\n\n/**\n * Gets the html of a group header row\n * @param {string} displayName - The group display name\n */\nfunction getGroupHeaderRowHtml(displayName) {\n\treturn '<tr class=\"pgGroupRow\"><td colspan=\"2\" class=\"pgGroupCell\">' + displayName + '</td></tr>';\n}\n\n/**\n * Gets the html of a specific property row\n * @param {string} pgId - The property-grid id being rendered\n * @param {string} name - The property name\n * @param {*} value - The current property value\n * @param {object} meta - A metadata object describing this property\n * @param {function[]} [postCreateInitFuncs] - An array to fill with functions to run after the grid was created\n * @param {object.<string, function>} [getValueFuncs] - A dictionary where the key is the property name and the value is a function to retrieve the property selected value\n * @param {object} options - The global options object\n */\nfunction getPropertyRowHtml(pgId, name, value, meta, postCreateInitFuncs, getValueFuncs, options) {\n\tmeta = meta || {};\n\tvar displayName = meta.name || name;\n\tvar type = meta.type || '';\n\tvar elemId = pgId + name;\n\tvar valueHTML;\n\n\t// if type not passed, infer type based on value...\n\tif (type === '') {\n\t\tif (typeof value === 'boolean') {\n\t\t\ttype = 'boolean';\n\t\t} else if (typeof value === 'number') {\n\t\t\ttype = 'number';\n\t\t}\n\t}\n\n\t// if jquery UI components aren't loaded fall back to plain inputs\n\tif (type === 'number' && typeof $.fn.spinner !== 'function') {\n\t\ttype = 'input';\n\t} else if (type === 'color' && typeof $.fn.spectrum !== 'function') {\n\t\ttype = 'input';\n\t}\n\n\t// check if type is registered in customTypes, or standard types, otherwise default to INPUT\n\tvar thisType = options.customTypes[type] || options.types[type] || options.types['input'];\n\tvalueHTML = thisType.html(elemId, name, value, meta);\n\tgetValueFuncs[name] = thisType.valueFunction(elemId, name, value, meta);\n\tif (thisType.hasOwnProperty('postCreateInitFunction')) {\n\t\tpostCreateInitFuncs.push(thisType.postCreateInitFunction(elemId, name, value, meta));\n\t}\n\n\t// Now create the label HTML for column 1\n\tvar helpIcon = '[?]';\n\tif (options.useFontAwesome) {\n\t\thelpIcon = '<i class=\"fa fa-question-circle-o\"></i>';\n\t}\n\tif (typeof meta.description === 'string' && meta.description && (typeof meta.showHelp === 'undefined' || meta.showHelp)) {\n\t\tdisplayName += '<span class=\"pgTooltip\" title=\"' + meta.description + '\">' + helpIcon + '</span>';\n\t}\n\n\t// Now create the TR which has 1 column for the label and 1 column for the INPUT\n\tif (meta.colspan2) {\n\t\treturn '<tr class=\"pgRow\"><td colspan=\"2\" class=\"pgCell\">' + valueHTML + '</td></tr>';\n\t} else {\n\t\treturn '<tr class=\"pgRow\"><td class=\"pgCell\">' + displayName + '</td><td class=\"pgCell\">' + valueHTML + '</td></tr>';\n\t}\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./boolean.js\": 5,\n\t\"./color.js\": 6,\n\t\"./input.js\": 7,\n\t\"./label.js\": 8,\n\t\"./number.js\": 9,\n\t\"./options.js\": 10,\n\t\"./textarea.js\": 11\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    var html = '<input type=\"checkbox\" id=\"' + elemId + '\" value=\"' + name + '\"';\n    html += value ? ' checked' : '';\n    html += ' />';\n    return html;\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).prop('checked');\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" />';\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).spectrum('get').toHexString();\n    };\n  },\n  postCreateInitFunction: function postCreateInitFunction(elemId, name, value, meta) {\n    return function () {\n      var opts = $.extend({}, meta.options);\n      if (typeof value === 'string') {\n        opts.color = value;\n      }\n      $('#' + elemId).spectrum(opts);\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" value=\"' + value + '\"</input>';\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  html: function html(elemId, name, value, meta) {\n    if (typeof meta.description === 'string' && meta.description) {\n      return '<label for=\"' + elemId + '\" title=\"' + meta.description + '\">' + value + '</label>';\n    } else {\n      return '<label for=\"' + elemId + '\">' + value + '</label>';\n    }\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return value;\n    };\n  }\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" value=\"' + value + '\" style=\"width:50px\" />';\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      if (typeof $.fn.spinner === 'function') {\n        return $('#' + elemId).spinner('value');\n      } else {\n        return $('#' + elemId).val();\n      }\n    };\n  },\n  postCreateInitFunction: function postCreateInitFunction(elemId, name, value, meta) {\n    if (typeof $.fn.spinner === 'function') {\n      var opts = $.extend({}, meta.options);\n      // Add a handler to the change event to verify the min/max (only if not provided by the user)\n      opts.change = typeof opts.change === 'undefined' ? onSpinnerChange : opts.change;\n\n      return function () {\n        $('#' + elemId).spinner(opts);\n      };\n    } else {\n      return null;\n    }\n  }\n};\n\n/**\n * Handler for the spinner change event\n */\nfunction onSpinnerChange() {\n  var $spinner = $(this);\n  var value = $spinner.spinner('value');\n\n  // If the value is null and the real value in the textbox is string we empty the textbox\n  if (value === null && typeof $spinner.val() === 'string') {\n    $spinner.val('');\n    return;\n  }\n\n  // Now check that the number is in the min/max range.\n  var min = $spinner.spinner('option', 'min');\n  var max = $spinner.spinner('option', 'max');\n  if (typeof min === 'number' && this.value < min) {\n    this.value = min;\n    return;\n  }\n\n  if (typeof max === 'number' && this.value > max) {\n    this.value = max;\n  }\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = {\n  html: function html(elemId, name, value, meta) {\n    selectedValue = value || '';\n    options = meta.options || [];\n\n    var html = '<select id=\"' + elemId + '\">';\n    for (var i = 0; i < options.length; i++) {\n      var optionValue = _typeof(options[i]) === 'object' ? options[i].value : options[i];\n      var text = _typeof(options[i]) === 'object' ? options[i].text : options[i];\n\n      html += '<option value=\"' + optionValue + '\"';\n      html += selectedValue === optionValue ? ' selected>' : '>';\n      html += text + '</option>';\n    }\n    html += '</select>';\n    return html;\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {module.exports = {\n  html: function html(elemId, name, value, meta) {\n    var html = '<textarea id=\"' + elemId;\n    if (value instanceof Array) {\n      html += '\" rows=6 style=\"white-space: nowrap; overflow-x: auto; width:100%\">';\n      html += value.join(\"\\n\");\n    } else {\n      html += '\" rows=6 style=\"overflow-x: auto; width:100%\">';\n      html += value;\n    }\n    html += '</textarea>';\n    return html;\n  },\n  valueFunction: function valueFunction(elemId, name, value, meta) {\n    return function () {\n      if (value instanceof Array) {\n        return $('#' + elemId).val().split('\\n');\n      } else {\n        return $('#' + elemId).val();\n      }\n    };\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// jqPropertyGrid.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f268d2101a9fd0483c61","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 0\n// module chunks = 0","require('./main.css')\n\nvar OTHER_GROUP_NAME = 'Other';\nvar GET_VALS_FUNC_KEY = 'pg.getValues';\nvar pgIdSequence = 0;\n\n/**\n * Generates the property grid\n * @param {object} obj - The object whose properties we want to display\n * @param {JQPropertyGridOptions} options - Options object for the component\n */\n\n$.fn.jqPropertyGrid = function(obj, options) {\n\t// Check if the user called the 'get' function (to get the values back from the grid).\n\tif (typeof obj === 'string' && obj === 'get') {\n\t\tif (typeof this.data(GET_VALS_FUNC_KEY) === 'function') {\n\t\t\treturn this.data(GET_VALS_FUNC_KEY)();\n\t\t}\n\n\t\treturn null;\n\t} else if (typeof obj !== 'object' || obj === null) {\n\t\tconsole.error('jqPropertyGrid 1st parameter must be a JS data object to initialize the grid.');\n\t\treturn;\n\t} else if (typeof options !== 'object' || options === null) {\n\t\tconsole.error('jqPropertyGrid 2nd parameter must be a JS object defining the grid display options.');\n\t\treturn;\n\t}\n\n\t// Normalize options\n\toptions.customTypes = options.customTypes || {};\n\toptions.types = {};\n\tvar meta = options.meta;\n\n\t// LOAD ALL files in the \"types\" folder as a custom type named the same as the base filename\n\tvar allTypes = require.context(\"./types\", true, /\\.js$/)\n\tfor (var typeFilename of allTypes.keys()) {\n\t\tvar regex = new RegExp(\"^\\.\\/(.*?)\\.js$\");\n\t\tvar match = regex.exec(typeFilename);\n\t\tif (match !== null) {\n\t\t\tvar typeName = match[1];\n\t\t\toptions.types[typeName] = allTypes(typeFilename)\n\t\t}\n\t}\n\n\t// Seems like we are ok to create the grid\n\tvar groupHTML = {};\n\tvar postCreateInitFuncs = [];\n\tvar getValueFuncs = {};\n\tvar pgId = 'pg' + (pgIdSequence++);\n\n\t// LOOP through all properties in the DATA OBJECT\n\tfor (var prop in obj) {\n\t\t// Skip if this is not a direct property, a function, or its meta says it's non browsable\n\t\tif (!obj.hasOwnProperty(prop) || typeof obj[prop] === 'function' || (meta[prop] && meta[prop].browsable === false)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If this is the first time we run into this group create the group row\n\t\tvar currGroup = (meta[prop] && meta[prop].group) || OTHER_GROUP_NAME;\n\t\tif (groupHTML[currGroup] === undefined) {\n\t\t\tgroupHTML[currGroup] = getGroupHeaderRowHtml(currGroup);\n\t\t}\n\n\t\t// Append the current cell html into the group html\n\t\tgroupHTML[currGroup] += getPropertyRowHtml(pgId, prop, obj[prop], meta[prop], postCreateInitFuncs, getValueFuncs, options);\n\t}\n\n\t// Now we have all the html we need, just assemble it\n\tvar innerHTML = '<table class=\"pgTable\">';\n\tfor (var group in groupHTML) {\n\t\tif (group == OTHER_GROUP_NAME) continue;\n\t\tinnerHTML += groupHTML[group];\n\t}\n\n\t// Finally add the \"Other\" group to the end\n\tif (groupHTML[OTHER_GROUP_NAME]) {\n\t\tinnerHTML += groupHTML[OTHER_GROUP_NAME];\n\t}\n\n\t// Close the table and apply it to the div\n\tinnerHTML += '</table>';\n\tthis.html(innerHTML);\n\n\t// Now that HTML is in the DOM, run any post-init functions\n\tfor (var i = 0; i < postCreateInitFuncs.length; ++i) {\n\t\tif (typeof postCreateInitFuncs[i] === 'function') {\n\t\t\tpostCreateInitFuncs[i]();\n\t\t}\n\t}\n\n\t// Create a function that will return the values back from the property grid\n\tthis.data(GET_VALS_FUNC_KEY, function() {\n\t\tvar result = {};\n\t\tfor (var prop in getValueFuncs) {\n\t\t\tif (typeof getValueFuncs[prop] !== 'function') continue;\n\t\t\tresult[prop] = getValueFuncs[prop]();\n\t\t}\n\t\treturn result;\n\t});\n};\n\n/**\n * Gets the html of a group header row\n * @param {string} displayName - The group display name\n */\nfunction getGroupHeaderRowHtml(displayName) {\n\treturn '<tr class=\"pgGroupRow\"><td colspan=\"2\" class=\"pgGroupCell\">' + displayName + '</td></tr>';\n}\n\n/**\n * Gets the html of a specific property row\n * @param {string} pgId - The property-grid id being rendered\n * @param {string} name - The property name\n * @param {*} value - The current property value\n * @param {object} meta - A metadata object describing this property\n * @param {function[]} [postCreateInitFuncs] - An array to fill with functions to run after the grid was created\n * @param {object.<string, function>} [getValueFuncs] - A dictionary where the key is the property name and the value is a function to retrieve the property selected value\n * @param {object} options - The global options object\n */\nfunction getPropertyRowHtml(pgId, name, value, meta, postCreateInitFuncs, getValueFuncs, options) {\n\tmeta = meta || {};\n\tvar displayName = meta.name || name;\n\tvar type = meta.type || '';\n\tvar elemId = pgId + name;\n\tvar valueHTML;\n\n\t// if type not passed, infer type based on value...\n\tif (type === '') {\n\t\tif (typeof value === 'boolean') {\n\t\t\ttype = 'boolean';\n\t\t} else if (typeof value === 'number') {\n\t\t\ttype = 'number';\n\t\t}\n\t}\n\n\t// if jquery UI components aren't loaded fall back to plain inputs\n\tif (type === 'number' && typeof $.fn.spinner !== 'function') {\n\t\ttype = 'input';\n\t} else if (type === 'color' && typeof $.fn.spectrum !== 'function') {\n\t\ttype = 'input';\n\t}\n\n\t// check if type is registered in customTypes, or standard types, otherwise default to INPUT\n\tvar thisType = options.customTypes[type] || options.types[type] || options.types['input'];\n\tvalueHTML = thisType.html(elemId, name, value, meta);\n\tgetValueFuncs[name] = thisType.valueFunction(elemId, name, value, meta);\n\tif (thisType.hasOwnProperty('postCreateInitFunction')) {\n\t\tpostCreateInitFuncs.push(thisType.postCreateInitFunction(elemId, name, value, meta));\n\t}\n\n\t// Now create the label HTML for column 1\n\tvar helpIcon = '[?]';\n\tif (options.useFontAwesome) {\n\t\thelpIcon = '<i class=\"fa fa-question-circle-o\"></i>';\n\t}\n\tif (typeof meta.description === 'string' && meta.description &&\n\t\t(typeof meta.showHelp === 'undefined' || meta.showHelp)) {\n\t\tdisplayName += '<span class=\"pgTooltip\" title=\"' + meta.description + '\">' + helpIcon + '</span>';\n\t}\n\n\t// Now create the TR which has 1 column for the label and 1 column for the INPUT\n\tif (meta.colspan2) {\n\t\treturn '<tr class=\"pgRow\"><td colspan=\"2\" class=\"pgCell\">' + valueHTML + '</td></tr>';\n\t} else {\n\t\treturn '<tr class=\"pgRow\"><td class=\"pgCell\">' + displayName + '</td><td class=\"pgCell\">' + valueHTML + '</td></tr>';\n\t}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./main.js","var map = {\n\t\"./boolean.js\": 5,\n\t\"./color.js\": 6,\n\t\"./input.js\": 7,\n\t\"./label.js\": 8,\n\t\"./number.js\": 9,\n\t\"./options.js\": 10,\n\t\"./textarea.js\": 11\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types \\.js$\n// module id = 4\n// module chunks = 0","module.exports = {\n  html (elemId, name, value, meta) {\n    var html = '<input type=\"checkbox\" id=\"' + elemId + '\" value=\"' + name + '\"';\n    html += (value) ? ' checked' : '';\n    html += ' />';\n    return html;\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).prop('checked');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./types/boolean.js","module.exports = {\n  html (elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" />';\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).spectrum('get').toHexString();\n    }\n  },\n\n  postCreateInitFunction (elemId, name, value, meta) {\n    return function () {\n      var opts = $.extend({}, meta.options);\n      if (typeof value === 'string') {\n        opts.color = value;\n      }\n      $('#' + elemId).spectrum(opts);\n    };\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./types/color.js","module.exports = {\n  html (elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" value=\"' + value + '\"</input>';\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./types/input.js","module.exports = {\n  html (elemId, name, value, meta) {\n    if (typeof meta.description === 'string' && meta.description) {\n\t\t\treturn '<label for=\"' + elemId + '\" title=\"' + meta.description + '\">' + value + '</label>';\n\t\t} else {\n\t\t\treturn '<label for=\"' + elemId + '\">' + value + '</label>';\n\t\t}\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return value;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./types/label.js","module.exports = {\n  html (elemId, name, value, meta) {\n    return '<input type=\"text\" id=\"' + elemId + '\" value=\"' + value + '\" style=\"width:50px\" />';\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      if (typeof $.fn.spinner === 'function') {\n        return $('#' + elemId).spinner('value');\n      } else {\n        return $('#' + elemId).val();\n      }\n    }\n  },\n\n  postCreateInitFunction (elemId, name, value, meta) {\n    if (typeof $.fn.spinner === 'function') {\n      var opts = $.extend({}, meta.options);\n      // Add a handler to the change event to verify the min/max (only if not provided by the user)\n      opts.change = typeof opts.change === 'undefined' ? onSpinnerChange : opts.change;\n      \n      return function () {\n        $('#' + elemId).spinner(opts);\n      };\n    } else {\n      return null;\n    }\n  }\n};\n\n/**\n * Handler for the spinner change event\n */\nfunction onSpinnerChange() {\n\tvar $spinner = $(this);\n\tvar value = $spinner.spinner('value');\n\n\t// If the value is null and the real value in the textbox is string we empty the textbox\n\tif (value === null && typeof $spinner.val() === 'string') {\n\t\t$spinner.val('');\n\t\treturn;\n\t}\n\n\t// Now check that the number is in the min/max range.\n\tvar min = $spinner.spinner('option', 'min');\n\tvar max = $spinner.spinner('option', 'max');\n\tif (typeof min === 'number' && this.value < min) {\n\t\tthis.value = min;\n\t\treturn;\n\t}\n\n\tif (typeof max === 'number' && this.value > max) {\n\t\tthis.value = max;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./types/number.js","module.exports = {\n  html (elemId, name, value, meta) {\n    selectedValue = value || '';\n    options = meta.options || [];\n  \n    var html = '<select id=\"' + elemId + '\">';\n    for (var i = 0; i < options.length; i++) {\n      var optionValue = typeof options[i] === 'object' ? options[i].value : options[i];\n      var text = typeof options[i] === 'object' ? options[i].text : options[i];\n  \n      html += '<option value=\"' + optionValue + '\"';\n      html += (selectedValue === optionValue) ? ' selected>' : '>';\n      html += text + '</option>';\n    }\n    html += '</select>';\n    return html;\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      return $('#' + elemId).val();\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./types/options.js","module.exports = {\n  html (elemId, name, value, meta) {\n    var html = '<textarea id=\"' + elemId;\n    if (value instanceof Array) {\n      html += '\" rows=6 style=\"white-space: nowrap; overflow-x: auto; width:100%\">';\n      html += value.join(\"\\n\");\n    } else {\n      html += '\" rows=6 style=\"overflow-x: auto; width:100%\">';\n      html += value;\n    }\n    html += '</textarea>';\n    return html;\n  },\n\n  valueFunction (elemId, name, value, meta) {\n    return function () {\n      if (value instanceof Array) {\n        return $('#' + elemId).val().split('\\n');\n      } else {\n        return $('#' + elemId).val()\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./types/textarea.js"],"sourceRoot":""}